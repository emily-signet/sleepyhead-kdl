use sleepyhead_kdl::assembler::*;
use sleepyhead_kdl::parser::Parser;

macro_rules! test_a_file {
    ($f:expr, $name:ident) => {
        #[test]
        fn $name () {
            let mut parser = Parser::from_str($f);
            assert!(parse_document(&mut parser).is_ok());
        }
    };

    (fail $f:expr, $name:ident) => {
        #[test]
        fn $name () {
            let mut parser = Parser::from_str($f);
            assert!(parse_document(&mut parser).is_err());
        }
    }
}

test_a_file!(fail include_str!("input/backslash_in_bare_id.kdl"), backslash_in_bare_id);
test_a_file!(include_str!("input/arg_false_type.kdl"), arg_false_type);
test_a_file!(fail include_str!("input/type_before_prop_key.kdl"), type_before_prop_key);
test_a_file!(include_str!("input/bare_emoji.kdl"), bare_emoji);
test_a_file!(include_str!("input/node_type.kdl"), node_type);
test_a_file!(fail include_str!("input/just_type_no_arg.kdl"), just_type_no_arg);
test_a_file!(include_str!("input/positive_exponent.kdl"), positive_exponent);
test_a_file!(include_str!("input/multiline_comment.kdl"), multiline_comment);
test_a_file!(include_str!("input/false_prefix_in_bare_id.kdl"), false_prefix_in_bare_id);
test_a_file!(include_str!("input/newlines_in_block_comment.kdl"), newlines_in_block_comment);
test_a_file!(include_str!("input/trailing_crlf.kdl"), trailing_crlf);
test_a_file!(include_str!("input/empty_child.kdl"), empty_child);
test_a_file!(fail include_str!("input/dot_zero.kdl"), dot_zero);
test_a_file!(include_str!("input/null_arg.kdl"), null_arg);
test_a_file!(include_str!("input/zero_int.kdl"), zero_int);
test_a_file!(include_str!("input/just_block_comment.kdl"), just_block_comment);
test_a_file!(fail include_str!("input/empty_arg_type.kdl"), empty_arg_type);
test_a_file!(include_str!("input/slashdash_arg_after_newline_esc.kdl"), slashdash_arg_after_newline_esc);
test_a_file!(fail include_str!("input/empty_prop_type.kdl"), empty_prop_type);
test_a_file!(fail include_str!("input/square_bracket_in_bare_id.kdl"), square_bracket_in_bare_id);
test_a_file!(include_str!("input/esc_unicode_in_string.kdl"), esc_unicode_in_string);
test_a_file!(include_str!("input/nested_block_comment.kdl"), nested_block_comment);
test_a_file!(include_str!("input/null_prop.kdl"), null_prop);
test_a_file!(include_str!("input/leading_zero_int.kdl"), leading_zero_int);
test_a_file!(fail include_str!("input/comment_in_node_type.kdl"), comment_in_node_type);
test_a_file!(fail include_str!("input/true_prop_key.kdl"), true_prop_key);
test_a_file!(include_str!("input/arg_float_type.kdl"), arg_float_type);
test_a_file!(fail include_str!("input/multiple_dots_in_float_before_exponent.kdl"), multiple_dots_in_float_before_exponent);
test_a_file!(include_str!("input/quoted_arg_type.kdl"), quoted_arg_type);
test_a_file!(include_str!("input/null_prefix_in_bare_id.kdl"), null_prefix_in_bare_id);
test_a_file!(include_str!("input/empty_string_arg.kdl"), empty_string_arg);
test_a_file!(include_str!("input/arg_string_type.kdl"), arg_string_type);
test_a_file!(fail include_str!("input/underscore_before_number.kdl"), underscore_before_number);
test_a_file!(fail include_str!("input/just_space_in_prop_type.kdl"), just_space_in_prop_type);
test_a_file!(include_str!("input/slashdash_empty_child.kdl"), slashdash_empty_child);
test_a_file!(include_str!("input/string_arg.kdl"), string_arg);
test_a_file!(include_str!("input/crlf_between_nodes.kdl"), crlf_between_nodes);
test_a_file!(include_str!("input/slashdash_arg_before_newline_esc.kdl"), slashdash_arg_before_newline_esc);
test_a_file!(fail include_str!("input/slash_in_bare_id.kdl"), slash_in_bare_id);
test_a_file!(include_str!("input/commented_node.kdl"), commented_node);
test_a_file!(include_str!("input/nested_children.kdl"), nested_children);
test_a_file!(include_str!("input/raw_string_arg.kdl"), raw_string_arg);
test_a_file!(fail include_str!("input/comment_in_arg_type.kdl"), comment_in_arg_type);
test_a_file!(include_str!("input/unusual_bare_id_chars_in_quoted_id.kdl"), unusual_bare_id_chars_in_quoted_id);
test_a_file!(include_str!("input/semicolon_terminated.kdl"), semicolon_terminated);
test_a_file!(fail include_str!("input/comment_after_arg_type.kdl"), comment_after_arg_type);
test_a_file!(include_str!("input/string_prop.kdl"), string_prop);
test_a_file!(include_str!("input/int_multiple_underscore.kdl"), int_multiple_underscore);
test_a_file!(include_str!("input/block_comment_after_node.kdl"), block_comment_after_node);
test_a_file!(include_str!("input/hex.kdl"), hex);
test_a_file!(fail include_str!("input/space_in_arg_type.kdl"), space_in_arg_type);
test_a_file!(include_str!("input/only_line_comment_newline.kdl"), only_line_comment_newline);
test_a_file!(fail include_str!("input/space_after_arg_type.kdl"), space_after_arg_type);
test_a_file!(include_str!("input/node_true.kdl"), node_true);
test_a_file!(include_str!("input/just_child.kdl"), just_child);
test_a_file!(include_str!("input/slashdash_child.kdl"), slashdash_child);
test_a_file!(include_str!("input/only_line_comment_crlf.kdl"), only_line_comment_crlf);
test_a_file!(include_str!("input/prop_false_type.kdl"), prop_false_type);
test_a_file!(include_str!("input/tab_space.kdl"), tab_space);
test_a_file!(include_str!("input/hex_int.kdl"), hex_int);
test_a_file!(include_str!("input/trailing_underscore_octal.kdl"), trailing_underscore_octal);
test_a_file!(fail include_str!("input/underscore_at_start_of_hex.kdl"), underscore_at_start_of_hex);
test_a_file!(include_str!("input/blank_prop_type.kdl"), blank_prop_type);
test_a_file!(include_str!("input/raw_string_backslash.kdl"), raw_string_backslash);
test_a_file!(include_str!("input/slashdash_prop.kdl"), slashdash_prop);
test_a_file!(include_str!("input/quoted_node_type.kdl"), quoted_node_type);
test_a_file!(fail include_str!("input/parens_in_bare_id.kdl"), parens_in_bare_id);
test_a_file!(include_str!("input/slashdash_only_node.kdl"), slashdash_only_node);
test_a_file!(include_str!("input/semicolon_after_child.kdl"), semicolon_after_child);
test_a_file!(include_str!("input/underscore_in_float.kdl"), underscore_in_float);
test_a_file!(fail include_str!("input/chevrons_in_bare_id.kdl"), chevrons_in_bare_id);
test_a_file!(include_str!("input/arg_raw_string_type.kdl"), arg_raw_string_type);
test_a_file!(include_str!("input/node_false.kdl"), node_false);
test_a_file!(include_str!("input/true_prefix_in_prop_key.kdl"), true_prefix_in_prop_key);
test_a_file!(include_str!("input/escline_node.kdl"), escline_node);
test_a_file!(include_str!("input/escline_line_comment.kdl"), escline_line_comment);
test_a_file!(include_str!("input/arg_true_type.kdl"), arg_true_type);
test_a_file!(include_str!("input/prop_raw_string_type.kdl"), prop_raw_string_type);
test_a_file!(include_str!("input/null_prefix_in_prop_key.kdl"), null_prefix_in_prop_key);
test_a_file!(include_str!("input/prop_float_type.kdl"), prop_float_type);
test_a_file!(fail include_str!("input/just_type_no_prop.kdl"), just_type_no_prop);
test_a_file!(include_str!("input/just_newline.kdl"), just_newline);
test_a_file!(include_str!("input/emoji.kdl"), emoji);
test_a_file!(include_str!("input/true_prefix_in_bare_id.kdl"), true_prefix_in_bare_id);
test_a_file!(fail include_str!("input/space_after_node_type.kdl"), space_after_node_type);
test_a_file!(fail include_str!("input/comma_in_bare_id.kdl"), comma_in_bare_id);
test_a_file!(include_str!("input/raw_node_name.kdl"), raw_node_name);
test_a_file!(include_str!("input/arg_zero_type.kdl"), arg_zero_type);
test_a_file!(fail include_str!("input/brackets_in_bare_id.kdl"), brackets_in_bare_id);
test_a_file!(fail include_str!("input/dot_but_no_fraction_before_exponent.kdl"), dot_but_no_fraction_before_exponent);
test_a_file!(include_str!("input/slashdash_raw_prop_key.kdl"), slashdash_raw_prop_key);
test_a_file!(fail include_str!("input/question_mark_at_start_of_int.kdl"), question_mark_at_start_of_int);
test_a_file!(include_str!("input/same_args.kdl"), same_args);
test_a_file!(include_str!("input/nested_comments.kdl"), nested_comments);
test_a_file!(include_str!("input/sci_notation_large.kdl"), sci_notation_large);
test_a_file!(include_str!("input/leading_zero_binary.kdl"), leading_zero_binary);
test_a_file!(include_str!("input/same_name_nodes.kdl"), same_name_nodes);
test_a_file!(fail include_str!("input/multiple_es_in_float.kdl"), multiple_es_in_float);
test_a_file!(include_str!("input/empty_child_whitespace.kdl"), empty_child_whitespace);
test_a_file!(fail include_str!("input/just_type_no_node_id.kdl"), just_type_no_node_id);
test_a_file!(include_str!("input/boolean_prop.kdl"), boolean_prop);
test_a_file!(include_str!("input/block_comment.kdl"), block_comment);
test_a_file!(include_str!("input/parse_all_arg_types.kdl"), parse_all_arg_types);
test_a_file!(fail include_str!("input/multiple_dots_in_float.kdl"), multiple_dots_in_float);
test_a_file!(include_str!("input/all_escapes.kdl"), all_escapes);
test_a_file!(include_str!("input/single_prop.kdl"), single_prop);
test_a_file!(fail include_str!("input/just_space_in_node_type.kdl"), just_space_in_node_type);
test_a_file!(include_str!("input/binary.kdl"), binary);
test_a_file!(include_str!("input/newline_between_nodes.kdl"), newline_between_nodes);
test_a_file!(fail include_str!("input/space_after_prop_type.kdl"), space_after_prop_type);
test_a_file!(include_str!("input/arg_and_prop_same_name.kdl"), arg_and_prop_same_name);
test_a_file!(include_str!("input/just_node_id.kdl"), just_node_id);
test_a_file!(include_str!("input/raw_string_prop.kdl"), raw_string_prop);
test_a_file!(include_str!("input/multiline_string.kdl"), multiline_string);
test_a_file!(include_str!("input/block_comment_before_node_no_space.kdl"), block_comment_before_node_no_space);
test_a_file!(include_str!("input/repeated_prop.kdl"), repeated_prop);
test_a_file!(include_str!("input/zero_float.kdl"), zero_float);
test_a_file!(include_str!("input/multiline_nodes.kdl"), multiline_nodes);
test_a_file!(include_str!("input/underscore_in_octal.kdl"), underscore_in_octal);
test_a_file!(include_str!("input/slashdash_node_in_child.kdl"), slashdash_node_in_child);
test_a_file!(include_str!("input/numeric_prop.kdl"), numeric_prop);
test_a_file!(include_str!("input/positive_int.kdl"), positive_int);
test_a_file!(include_str!("input/only_line_comment.kdl"), only_line_comment);
test_a_file!(include_str!("input/all_node_fields.kdl"), all_node_fields);
test_a_file!(include_str!("input/hex_leading_zero.kdl"), hex_leading_zero);
test_a_file!(fail include_str!("input/illegal_char_in_binary.kdl"), illegal_char_in_binary);
test_a_file!(include_str!("input/escline.kdl"), escline);
test_a_file!(fail include_str!("input/illegal_char_in_hex.kdl"), illegal_char_in_hex);
test_a_file!(include_str!("input/boolean_arg.kdl"), boolean_arg);
test_a_file!(include_str!("input/underscore_in_int.kdl"), underscore_in_int);
test_a_file!(include_str!("input/hex_int_underscores.kdl"), hex_int_underscores);
test_a_file!(include_str!("input/quoted_numeric.kdl"), quoted_numeric);
test_a_file!(include_str!("input/raw_node_type.kdl"), raw_node_type);
test_a_file!(include_str!("input/prop_null_type.kdl"), prop_null_type);
test_a_file!(include_str!("input/slashdash_full_node.kdl"), slashdash_full_node);
test_a_file!(include_str!("input/quoted_prop_type.kdl"), quoted_prop_type);
test_a_file!(include_str!("input/sci_notation_small.kdl"), sci_notation_small);
test_a_file!(include_str!("input/slashdash_node_with_child.kdl"), slashdash_node_with_child);
test_a_file!(include_str!("input/semicolon_in_child.kdl"), semicolon_in_child);
test_a_file!(fail include_str!("input/dot_in_exponent.kdl"), dot_in_exponent);
test_a_file!(include_str!("input/commented_arg.kdl"), commented_arg);
test_a_file!(fail include_str!("input/bare_arg.kdl"), bare_arg);
test_a_file!(fail include_str!("input/null_prop_key.kdl"), null_prop_key);
test_a_file!(include_str!("input/nested_multiline_block_comment.kdl"), nested_multiline_block_comment);
test_a_file!(include_str!("input/esc_newline_in_string.kdl"), esc_newline_in_string);
test_a_file!(include_str!("input/quoted_prop_name.kdl"), quoted_prop_name);
test_a_file!(fail include_str!("input/dash_dash.kdl"), dash_dash);
test_a_file!(include_str!("input/two_nodes.kdl"), two_nodes);
test_a_file!(fail include_str!("input/comment_after_prop_type.kdl"), comment_after_prop_type);
test_a_file!(include_str!("input/only_cr.kdl"), only_cr);
test_a_file!(include_str!("input/leading_newline.kdl"), leading_newline);
test_a_file!(include_str!("input/negative_float.kdl"), negative_float);
test_a_file!(include_str!("input/raw_prop_type.kdl"), raw_prop_type);
test_a_file!(fail include_str!("input/underscore_at_start_of_fraction.kdl"), underscore_at_start_of_fraction);
test_a_file!(include_str!("input/raw_string_hash_no_esc.kdl"), raw_string_hash_no_esc);
test_a_file!(include_str!("input/prop_type.kdl"), prop_type);
test_a_file!(fail include_str!("input/space_in_node_type.kdl"), space_in_node_type);
test_a_file!(include_str!("input/underscore_in_exponent.kdl"), underscore_in_exponent);
test_a_file!(fail include_str!("input/quote_in_bare_id.kdl"), quote_in_bare_id);
test_a_file!(fail include_str!("input/just_space_in_arg_type.kdl"), just_space_in_arg_type);
test_a_file!(include_str!("input/empty_child_different_lines.kdl"), empty_child_different_lines);
test_a_file!(include_str!("input/octal.kdl"), octal);
test_a_file!(include_str!("input/quoted_node_name.kdl"), quoted_node_name);
test_a_file!(fail include_str!("input/illegal_char_in_octal.kdl"), illegal_char_in_octal);
test_a_file!(include_str!("input/arg_type.kdl"), arg_type);
test_a_file!(include_str!("input/false_prefix_in_prop_key.kdl"), false_prefix_in_prop_key);
test_a_file!(include_str!("input/prop_string_type.kdl"), prop_string_type);
test_a_file!(include_str!("input/underscore_in_fraction.kdl"), underscore_in_fraction);
test_a_file!(include_str!("input/slashdash_in_slashdash.kdl"), slashdash_in_slashdash);
test_a_file!(fail include_str!("input/multiple_x_in_hex.kdl"), multiple_x_in_hex);
test_a_file!(fail include_str!("input/comment_after_node_type.kdl"), comment_after_node_type);
test_a_file!(include_str!("input/raw_string_newline.kdl"), raw_string_newline);
test_a_file!(include_str!("input/binary_underscore.kdl"), binary_underscore);
test_a_file!(fail include_str!("input/comment_in_prop_type.kdl"), comment_in_prop_type);
test_a_file!(include_str!("input/no_decimal_exponent.kdl"), no_decimal_exponent);
test_a_file!(include_str!("input/empty_child_same_line.kdl"), empty_child_same_line);
test_a_file!(fail include_str!("input/false_prop_key.kdl"), false_prop_key);
test_a_file!(include_str!("input/numeric_arg.kdl"), numeric_arg);
test_a_file!(include_str!("input/negative_exponent.kdl"), negative_exponent);
test_a_file!(include_str!("input/binary_trailing_underscore.kdl"), binary_trailing_underscore);
test_a_file!(include_str!("input/prop_true_type.kdl"), prop_true_type);
test_a_file!(include_str!("input/leading_zero_oct.kdl"), leading_zero_oct);
test_a_file!(include_str!("input/zero_arg.kdl"), zero_arg);
test_a_file!(include_str!("input/preserve_node_order.kdl"), preserve_node_order);
test_a_file!(include_str!("input/commented_prop.kdl"), commented_prop);
test_a_file!(include_str!("input/trailing_underscore_hex.kdl"), trailing_underscore_hex);
test_a_file!(include_str!("input/empty_quoted_prop_key.kdl"), empty_quoted_prop_key);
test_a_file!(fail include_str!("input/underscore_at_start_of_int.kdl"), underscore_at_start_of_int);
test_a_file!(include_str!("input/block_comment_newline.kdl"), block_comment_newline);
test_a_file!(include_str!("input/prop_hex_type.kdl"), prop_hex_type);
test_a_file!(fail include_str!("input/empty_node_type.kdl"), empty_node_type);
test_a_file!(include_str!("input/single_arg.kdl"), single_arg);
test_a_file!(fail include_str!("input/space_in_prop_type.kdl"), space_in_prop_type);
test_a_file!(include_str!("input/slashdash_only_node_with_space.kdl"), slashdash_only_node_with_space);
test_a_file!(include_str!("input/raw_string_just_quote.kdl"), raw_string_just_quote);
test_a_file!(include_str!("input/commented_child.kdl"), commented_child);
test_a_file!(include_str!("input/asterisk_in_block_comment.kdl"), asterisk_in_block_comment);
test_a_file!(include_str!("input/prop_zero_type.kdl"), prop_zero_type);
test_a_file!(include_str!("input/raw_string_quote.kdl"), raw_string_quote);
test_a_file!(fail include_str!("input/dot_but_no_fraction.kdl"), dot_but_no_fraction);
test_a_file!(include_str!("input/r_node.kdl"), r_node);
test_a_file!(include_str!("input/raw_string_multiple_hash.kdl"), raw_string_multiple_hash);
test_a_file!(include_str!("input/arg_null_type.kdl"), arg_null_type);
test_a_file!(fail include_str!("input/escline_comment_node.kdl"), escline_comment_node);
test_a_file!(include_str!("input/blank_node_type.kdl"), blank_node_type);
test_a_file!(include_str!("input/empty.kdl"), empty);
test_a_file!(include_str!("input/slashdash_repeated_prop.kdl"), slashdash_repeated_prop);
test_a_file!(include_str!("input/semicolon_separated.kdl"), semicolon_separated);
test_a_file!(include_str!("input/raw_string_just_backslash.kdl"), raw_string_just_backslash);
test_a_file!(include_str!("input/empty_quoted_node_id.kdl"), empty_quoted_node_id);
test_a_file!(include_str!("input/repeated_arg.kdl"), repeated_arg);
test_a_file!(include_str!("input/commented_line.kdl"), commented_line);
test_a_file!(fail include_str!("input/no_digits_in_hex.kdl"), no_digits_in_hex);
test_a_file!(include_str!("input/raw_arg_type.kdl"), raw_arg_type);
test_a_file!(include_str!("input/negative_int.kdl"), negative_int);
test_a_file!(fail include_str!("input/unbalanced_raw_hashes.kdl"), unbalanced_raw_hashes);
test_a_file!(include_str!("input/semicolon_separated_nodes.kdl"), semicolon_separated_nodes);
test_a_file!(include_str!("input/blank_arg_type.kdl"), blank_arg_type);
test_a_file!(include_str!("input/block_comment_before_node.kdl"), block_comment_before_node);
test_a_file!(include_str!("input/unusual_chars_in_bare_id.kdl"), unusual_chars_in_bare_id);
test_a_file!(include_str!("input/arg_hex_type.kdl"), arg_hex_type);
test_a_file!(include_str!("input/preserve_duplicate_nodes.kdl"), preserve_duplicate_nodes);
test_a_file!(fail include_str!("input/question_mark_before_number.kdl"), question_mark_before_number);
test_a_file!(include_str!("input/just_space.kdl"), just_space);
test_a_file!(include_str!("input/slashdash_negative_number.kdl"), slashdash_negative_number);
